package com.route.me;

import android.annotation.SuppressLint;
import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.location.Criteria;
import android.location.GpsStatus.Listener;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.os.Bundle;
import android.provider.Settings;
import android.support.v4.app.FragmentActivity;
import android.widget.TextView;
import android.widget.Toast;

import com.google.android.gms.maps.CameraUpdate;
import com.google.android.gms.maps.CameraUpdateFactory;
import com.google.android.gms.maps.GoogleMap;
import com.google.android.gms.maps.LocationSource;
import com.google.android.gms.maps.MapFragment;
import com.google.android.gms.maps.SupportMapFragment;
import com.google.android.gms.maps.model.BitmapDescriptorFactory;
import com.google.android.gms.maps.model.LatLng;
import com.google.android.gms.maps.model.MarkerOptions;  
import com.google.android.gms.maps.MapView;

@SuppressLint("NewApi")
public class MainActivity extends FragmentActivity implements LocationListener, LocationSource{
	private TextView latitudeField;
	private TextView longitudeField;
	private LocationManager locationManager;
	private String provider;
	private GoogleMap map;
	static LatLng CurrentyPosition = new LatLng(0, 0);
	private OnLocationChangedListener mListener;	
	
	@Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        
        //latitudeField = (TextView) findViewById(R.id.TextView02);
        //longitudeField = (TextView) findViewById(R.id.TextView04);
        
        //Get the location manager       
        locationManager = (LocationManager) getSystemService(Context.LOCATION_SERVICE);                
        
        if(locationManager != null){
        	boolean gpsIsEnabled = locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER);
        	boolean networkIsEnabled = locationManager.isProviderEnabled(LocationManager.NETWORK_PROVIDER);
        	
        	if(gpsIsEnabled){
        		locationManager.requestLocationUpdates(locationManager.GPS_PROVIDER, 500L, 10F, this);
        	}else if(networkIsEnabled){
        		locationManager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 500L, 10F, this);
        	}else{
        		
        	}        	
        }else{
        	//latitudeField.setText("Location not available");
        	//latitudeField.setText("Location not available");
        	setUpMapIfNeeded();
        }
        
       //CurrentyPosition= new LatLng(location.getLatitude(), location.getAltitude());
        
       /* map = ((MapFragment) getFragmentManager().findFragmentById(R.id.map)).getMap();
        map.setMapType(GoogleMap.MAP_TYPE_SATELLITE);
        map.addMarker(new MarkerOptions().position(CurrentyPosition).title("Im Here"));
        
        map.moveCamera(CameraUpdateFactory.newLatLngZoom(CurrentyPosition, 15));
        
        map.animateCamera(CameraUpdateFactory.zoomTo(10), 2000, null);*/
        
    }
	
	 @Override
	  protected void onResume() {
	    super.onResume();
	    
	    setUpMapIfNeeded();
	    
        if(locationManager != null)
        {
        	map.setMyLocationEnabled(true);
        }
	  }	 
	 
	 protected void onPause() {
		 if(locationManager != null){
			 locationManager.removeUpdates(this);
		 }
		 super.onPause();
	 }		
	
	private void setUpMapIfNeeded(){
		 if(map == null){
			 map = ((SupportMapFragment) getSupportFragmentManager().findFragmentById(R.id.map)).getMap();
			 map.setLocationSource(this);
			 
			 if(map != null){
				 setUpMap();
			 }
			 map.setLocationSource(this);

		 }
	 }
	
	private void setUpMap(){
		map.setMyLocationEnabled(true);
	}
	
	@Override
	public void deactivate() {
		mListener = null;		
	}
	
	@Override
	public void onLocationChanged(Location location) {
		if(mListener != null){
			mListener.onLocationChanged(location);
			
			map.animateCamera(CameraUpdateFactory.newLatLng(new LatLng(location.getLatitude(), location.getLongitude())));
		}
		/*int lat = (int) (location.getLatitude());
	    int lng = (int) (location.getLongitude());
	    latitudeField.setText(String.valueOf(lat));
	    longitudeField.setText(String.valueOf(lng));*/
	}

	@Override
	public void onProviderDisabled(String provider) {
		// TODO Auto-generated method stub
		Toast.makeText(this, "Disabled provider " + provider,
		        Toast.LENGTH_SHORT).show();
	}

	@Override
	public void onProviderEnabled(String provider) {
		// TODO Auto-generated method stub
		Toast.makeText(this, "Enabled new provider " + provider,
		        Toast.LENGTH_SHORT).show();
	}

	@Override
	public void onStatusChanged(String provider, int status, Bundle extras) {
		// TODO Auto-generated method stub
		Toast.makeText(this, "status changed", Toast.LENGTH_SHORT).show();
	}

	@Override
	public void activate(OnLocationChangedListener listener) {
		mListener = listener;		
	}
	

} 